#!/usr/bin/python
# 
#     Copyright 2010, Kay Hayen, mailto:kayhayen@gmx.de
# 
#     Part of "Nuitka", my attempt of building an optimizing Python compiler
#     that is compatible and integrates with CPython, but also works on its
#     own.
# 
#     If you submit patches to this software in either form, you automatically
#     grant me a copyright assignment to the code, or in the alternative a BSD
#     license to the code, should your jurisdiction prevent this. This is to
#     reserve my ability to re-license the code at any time.
# 
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, version 3 of the License.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 

import sys, re

ran_re = re.compile( r"^(Ran \d+ tests? in )\d+\.\d+s$" )
instance_re = re.compile( r"at 0x[0-9a-f]+" )
compiled_function_re = re.compile( r"\<compiled function" )
compiled_generator_re = re.compile( r"\<callable-iterator object" )

for line in sys.stdin:
    line = instance_re.sub( "at 0xxxxxxxxx", line )
    line = compiled_function_re.sub( "<function", line )
    line = compiled_generator_re.sub( "<generator object <genexpr>", line )

    if ran_re.match( line ):
        print ran_re.match( line ).group(1) + " x.xxxs"
    else:
        print line,
